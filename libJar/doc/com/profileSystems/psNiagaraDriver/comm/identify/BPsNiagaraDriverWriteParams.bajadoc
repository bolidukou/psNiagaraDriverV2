<?xml version='1.0' encoding='UTF-8'?>
<bajadoc version='1.0' createdBy='Niagara Devkit 3.8.112' createdAt='26-Mar-2017' createdOn='WINDOWS-7ND9PUR'>
<class
  module='psNiagaraDriver'
  qualifiedName='com.profileSystems.psNiagaraDriver.comm.identify.BPsNiagaraDriverWriteParams'
  name='BPsNiagaraDriverWriteParams'
  packageName='com.profileSystems.psNiagaraDriver.comm.identify'
>
<extends module='devDriver' class='com.tridium.ddf.identify.BDdfIdParams'/>
<implements module='devDriver' class='com.tridium.ddf.identify.BIDdfWriteParams'/>

<!-- property forceWrite -->
<property name='forceWrite' flags=''>
<type class='boolean'/>
<description>Slot for the &lt;code&gt;forceWrite&lt;/code&gt; property.
 This property has nothing to with the dev driver framework
 itself. Instead, we need to construct the toByteArray
 method of the driver's write request in following the driver's protocol to write data values. In this hypothetical protocol, if we do not forceWrite then the equipment's internal program could overwrite any change that Niagara might make to a data value.</description>
<tag name='see'>com.profileSystems.psNiagaraDriver.comm.identify.BPsNiagaraDriverWriteParams#getForceWrite</tag>
<tag name='see'>com.profileSystems.psNiagaraDriver.comm.identify.BPsNiagaraDriverWriteParams#setForceWrite</tag>
</property>

<!-- public boolean getForceWrite() -->
<method name='getForceWrite' public='true'>
<return class='boolean'/>
<description>Get the &lt;code&gt;forceWrite&lt;/code&gt; property.
 This property has nothing to with the dev driver framework
 itself. Instead, we need to construct the toByteArray
 method of the driver's write request in following the driver's protocol to write data values. In this hypothetical protocol, if we do not forceWrite then the equipment's internal program could overwrite any change that Niagara might make to a data value.</description>
<tag name='see'>com.profileSystems.psNiagaraDriver.comm.identify.BPsNiagaraDriverWriteParams#forceWrite</tag>
</method>

<!-- public void setForceWrite(boolean v) -->
<method name='setForceWrite' public='true'>
<parameter name='v' class='boolean'/>
<return class='void'/>
<description>Set the &lt;code&gt;forceWrite&lt;/code&gt; property.
 This property has nothing to with the dev driver framework
 itself. Instead, we need to construct the toByteArray
 method of the driver's write request in following the driver's protocol to write data values. In this hypothetical protocol, if we do not forceWrite then the equipment's internal program could overwrite any change that Niagara might make to a data value.</description>
<tag name='see'>com.profileSystems.psNiagaraDriver.comm.identify.BPsNiagaraDriverWriteParams#forceWrite</tag>
</method>

<!-- public baja:javax.baja.sys.Type getType() -->
<method name='getType' public='true'>
<return module='baja' class='javax.baja.sys.Type'/>
</method>

<!-- public baja:javax.baja.sys.Type getWriteRequestType() -->
<method name='getWriteRequestType' public='true'>
<return module='baja' class='javax.baja.sys.Type'/>
</method>

<!-- public final static baja:javax.baja.sys.Type TYPE -->
<field name='TYPE' public='true' static='true' final='true'>
<type module='baja' class='javax.baja.sys.Type'/>
</field>

</class>
</bajadoc>
